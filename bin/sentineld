#!/usr/bin/env python

from sentinel.thrift_handler import SentinelHandler
from sentinel.collector.worker import SystemMonitor

from sentinel.thrift import Sentinel
from sentinel.thrift.ttypes import *

from thrift.transport import TSocket
from thrift.transport import TTransport
from thrift.protocol import TBinaryProtocol
from thrift.server import TServer

import socket
from multiprocessing import Process

def create_thrift_server():
    processor = Sentinel.Processor(SentinelHandler())
    transport = TSocket.TServerSocket(port=9090)
    tfactory = TTransport.TBufferedTransportFactory()
    pfactory = TBinaryProtocol.TBinaryProtocolFactory()
    server = TServer.TSimpleServer(processor, transport, tfactory, pfactory)
    return server

if __name__ == '__main__':
    #option line will be here

    #system monitor worker start
    sysmon = SystemMonitor();
    p = Process(name='Sentinel SystemMonitor',target=sysmon)
    p.daemon = True
    p.start()

    #thrift server start
    thrift_server = create_thrift_server()
    thrift_server.serve()
